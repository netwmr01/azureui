{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "Admin user name for the VMs"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for the VMs (A mix of upper and lower-case characters, digits and symbols)"
      }
    },
    "dirUsername": {
      "type": "string",
      "defaultValue": "diradmin",
      "metadata": {
        "description": "User name for the Cloudera Director Server"
      }
    },
    "dirPassword": {
      "type": "securestring",
      "metadata": {
        "description": "password for the Cloudera Director (A mix of upper and lower-case characters, digits and symbols)"
      }
    },
    "dbUsername": {
      "type": "string",
      "defaultValue": "dbadmin",
      "metadata": {
        "description": "User name for the MySQL Server"
      }
    },
    "dbPassword": {
      "type": "securestring",
      "metadata": {
        "description": "password for the DB Server (A mix of upper and lower-case characters, digits and symbols)"
      }
    },
    "subscriptionId":{
      "type": "string",
      "metadata": {
        "description": ""
      }
    },
    "tenantId":{
      "type": "string",
      "metadata": {
        "description": ""
      }
    },
    "clientId":{
      "type": "string",
      "metadata": {
        "description": ""
      }
    },
    "clientSecret":{
      "type": "securestring",
      "metadata": {
        "description": ""
      }
    },
    "passPhrase":{
      "type": "securestring",
      "metadata": {
        "description": ""
      }
    },
    "privateKey":{
      "type": "string",
      "metadata": {
        "description": ""
      }
    },
    "masterType": {
      "type": "string",
      "defaultValue": "Standard_DS13",
      "metadata": {
        "description": "The size of the VMs deployed as Master(s) in the cluster"
      }
    },
    "workerType": {
      "type": "string",
      "defaultValue": "Standard_DS14",
      "metadata": {
        "description": "The size of the VMs deployed as Workers in the cluster"
      }
    },
    "edgeType": {
      "type": "string",
      "defaultValue": "Standard_DS14",
      "metadata": {
        "description": "The size of the VMs deployed as Edge(s) in the cluster"
      }
    },
    "directorEnvironmentName":{
      "type": "string",
      "defaultValue": "Director_Azure_Deployment",
      "metadata": {
        "description": "Environment name use by Cloudera Director"
      }
    },
    "dnsNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS name where the VMs will be exposed"
      }
    },
    "dnsNameSuffix": {
      "type": "string",
      "metadata": {
        "description": "Unique DNS suffix where the VMs will be exposed"
        }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "The type of the Storage Account to be created (Default to Standard_LRS)"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "defaultValue": "clouderavnet",
      "metadata": {
        "description": "The name of the virtual network provisioned for the deployment"
      }
    },
    "vnetNewOrExisting" : {
      "type" : "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ],
      "metadata": {
        "description": "Indicator for new or exiting Virtual Network"
      }
    },
    "virtualNetworkRGName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource Group Name for Vnet. For new VNet leave it empty, otherwise type in existing resource group name"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "clouderasubnet",
      "metadata": {
        "description": "Subnet name for the virtual network where resources will be provisioned"
      }
    },
    "addressPrefix": {
      "type": "string",
      "defaultValue": "10.3.0.0/16",
      "metadata": {
        "description": "Virtual Network address CIDR"
      }
    },
    "subnetPrefix": {
      "type": "string",
      "defaultValue": "10.3.0.0/16",
      "metadata": {
        "description": "CIDR for the subnet where VMs will be placed"
      }
    },
    "directorServerIPAddress": {
      "type": "string",
      "defaultValue": "10.3.0.4",
      "metadata": {
        "description": "IP address for the director server"
      }
    },
    "dnsServerIPAddress": {
      "type": "string",
      "defaultValue": "10.3.0.4",
      "metadata": {
        "description": "IP address for the dns server"
      }
    },
    "mysqlServerIPAddress": {
      "type": "string",
      "defaultValue": "10.3.0.5",
      "metadata": {
        "description": "IP address for the mysql server"
      }
    },

    "company": {
      "type": "string",
      "defaultValue": "Company",
      "metadata": {
        "description": "Your Company"
      }
    },
    "emailAddress": {
      "type": "string",
      "defaultValue": "email@yourcompany.com",
      "metadata": {
        "description": "your email"
      }
    },
    "businessPhone": {
      "type": "string",
      "defaultValue": "123456789",
      "metadata": {
        "description": "your business phone number"
      }
    },
    "firstName": {
      "type": "string",
      "defaultValue": "FirstName",
      "metadata": {
        "description": "Your FirstName"
      }
    },
    "lastName": {
      "type": "string",
      "defaultValue": "LastName",
      "metadata": {
        "description": "Your LastName"
      }
    },
    "jobRole": {
      "type": "string",
      "defaultValue": "Administrator",
      "metadata": {
        "description": "Job Role"
      },
      "allowedValues": [
        "Administrator",
        "Analyst (Industry/Finance)",
        "Analyst (Technical)",
        "Architect",
        "C level",
        "Consultant",
        "Developer",
        "Director",
        "Engineer",
        "Individual contributor",
        "Manager",
        "Partner",
        "Student",
        "VP"
      ]
    },
    "jobFunction": {
      "type": "string",
      "defaultValue": "Analytics / Business Intelligence",
      "metadata": {
        "description": "Job Function"
      },
      "allowedValues": [
        "Analytics / Business Intelligence",
        "Big Data / Architecture",
        "Data Warehouse / Management",
        "Data Science",
        "Database",
        "ETL / ELT",
        "Infrastructure",
        "IT",
        "Marketing / Sales",
        "Networking",
        "Manager",
        "Security / Compliance",
        "Storage"
      ]
    },
     "artifactsBaseUrl" : {
      "type" : "string",
      "metadata" : {
        "artifactsBaseUrl" : "Base URL of the Cloudera Template gallery package"
      },
      "defaultValue" : ""
    }
  },
  "variables": {
    "version":{
      "templateAPIVersion":"2015-11-01",
      "resourceAPIVersion":"2015-06-15",
      "typeHandlerVersion":"1.5",
      "contentVersion":"1.0.0.0"
    },
    "addressPrefix":"[parameters('addressPrefix')]",
    "subnetPrefix":"[parameters('subnetPrefix')]",
    "scriptsUri": "[parameters('artifactsBaseUrl')]",
    "share-resourcesUri": "[concat(variables('scriptsUri'), '/shared-resources-', parameters('vnetNewOrExisting'), '-vnet.json')]",
    "vnetUri": "[concat(variables('scriptsUri'), '/update-', parameters('vnetNewOrExisting'), '-vnet-dns.json')]",
    "networkRestartUri": "[concat(variables('scriptsUri'), '/network-restart.json')]",
    "storageAccount": {
      "prefix": "[concat(uniquestring(resourceGroup().id),'storage')]",
      "type": "[parameters('storageAccountType')]"
    },
    "clusterParameters":{
      "envName":"[parameters('directorEnvironmentName')]",
      "location":"[resourceGroup().location]",
      "subId":"[parameters('subscriptionId')]",
      "tenantId":"[parameters('tenantId')]",
      "clientId":"[parameters('clientId')]",
      "clientSecret":"[parameters('clientSecret')]",
      "adminUsername":"[parameters('adminUsername')]",
      "passPhrase":"[parameters('passPhrase')]",
      "privateKey":"[parameters('privateKey')]",
      "networkSecurityGroupResourceGroup":"[resourceGroup().name]",
      "networkSecurityGroup":"[concat(parameters('virtualNetworkName'),'-nsg')]",
      "virtualNetworkResourceGroup":"[resourceGroup().name]",
      "virtualNetwork":"[parameters('virtualNetworkName')]",
      "subnetName":"[parameters('subnetName')]",
      "computeResourceGroup":"[resourceGroup().name]",
      "hostFqdnSuffix":"[parameters('dnsNameSuffix')]",
      "dbAddress":"[parameters('mysqlServerIPAddress')]",
      "dbUsername":"[parameters('dbUsername')]",
      "dbPassword":"[parameters('dbPassword')]",
      "masterType":"[parameters('masterType')]",
      "workerType":"[parameters('workerType')]",
      "edgeType":"[parameters('edgeType')]",
      "dirUsername":"[parameters('dirUsername')]",
      "dirPassword":"[parameters('dirPassword')]"
    },
    "vmSpec": {
      "vmSize": "Standard_D3",
      "adminUsername": "[parameters('adminUsername')]",
      "adminPassword": "[parameters('adminPassword')]",
      "asName": "[concat(parameters('dnsNamePrefix'), '-as')]",
      "dbUsername": "[parameters('dbUsername')]",
      "dbPassword": "[parameters('dbPassword')]"
    },
    "networkSpec": {
      "addressPrefix": "[variables('addressPrefix')]",
      "subnetPrefix": "[variables('subnetPrefix')]",
      "directorServerIPAddress":"[parameters('directorServerIPAddress')]",
      "dnsServerIPAddress":"[parameters('directorServerIPAddress')]",
      "dbServerIpAddress":"[parameters('mysqlServerIPAddress')]",
      "virtualNetworkName": "[parameters('virtualNetworkName')]",
      "virtualNetworkRGName":"[parameters('virtualNetworkRGName')]",
      "vnetNewOrExisting": "[parameters('vnetNewOrExisting')]",
      "virtualNetworkSubnetName": "[parameters('subnetName')]"
    },
    "newVNetId":"[resourceId(concat('Microsoft.Network','/','virtualNetworks'),parameters('virtualNetworkName'))]",
    "existingVNetId":"[resourceId(parameters('virtualNetworkRGName'),concat('Microsoft.Network','/','virtualNetworks'),parameters('virtualNetworkName'))]",
    "VNetId": "[variables(concat(parameters('vnetNewOrExisting'),'VNetId'))]"
  },
  "resources": [
    {
      "name": "shared-resources",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('version').templateAPIVersion]",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('share-resourcesUri')]",
          "contentVersion": "[variables('version').contentVersion]"
        },
        "parameters": {
          "version":{
            "value":"[variables('version')]"
          },
          "networkSpec": {
            "value": "[variables('networkSpec')]"
          },
          "asName": {
            "value": "[variables('vmSpec').asName]"
          }
        }
      }
    },
    {
      "name": "director-node",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('version').templateAPIVersion]",
      "dependsOn": [
        "Microsoft.Resources/deployments/shared-resources"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('scriptsUri'), '/director-node.json')]",
          "contentVersion": "[variables('version').contentVersion]"
        },
        "parameters": {
          "vnetID":{
            "value":"[variables('VNetId')]"
          },
          "version":{
            "value":"[variables('version')]"
          },
          "dnsNamePrefix": {
            "value": "[parameters('dnsNamePrefix')]"
          },
          "dnsNameSuffix": {
            "value": "[parameters('dnsNameSuffix')]"
          },
          "scriptsUri": {
            "value": "[variables('scriptsUri')]"
          },
          "storageAccount": {
            "value": "[variables('storageAccount')]"
          },
          "vmSpec": {
            "value": "[variables('vmSpec')]"
          },
          "networkSpec": {
            "value": "[variables('networkSpec')]"
          }
        }
      }
    },
    {
      "name": "mysql-node",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('version').templateAPIVersion]",
      "dependsOn": [
        "Microsoft.Resources/deployments/shared-resources"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('scriptsUri'), '/mysql-node.json')]",
          "contentVersion": "[variables('version').contentVersion]"
        },
        "parameters": {
          "vnetID":{
            "value":"[variables('VNetId')]"
          },
          "version":{
            "value":"[variables('version')]"
          },
          "dnsNamePrefix": {
            "value": "[parameters('dnsNamePrefix')]"
          },
          "dnsNameSuffix": {
            "value": "[parameters('dnsNameSuffix')]"
          },
          "scriptsUri": {
            "value": "[variables('scriptsUri')]"
          },
          "storageAccount": {
            "value": "[variables('storageAccount')]"
          },
          "vmSpec": {
            "value": "[variables('vmSpec')]"
          },
          "networkSpec": {
            "value": "[variables('networkSpec')]"
          }
        }
      }
    },
    {
      "name": "update-vnet-dns",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('version').templateAPIVersion]",
      "dependsOn": [
        "Microsoft.Resources/deployments/director-node"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vnetUri')]",
          "contentVersion": "[variables('version').contentVersion]"
        },
        "parameters": {
          "version":{
            "value":"[variables('version')]"
          },
          "networkSpec": {
            "value": "[variables('networkSpec')]"
          }
        }
      }
    },
    {
      "name": "network-restart-dns",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('version').templateAPIVersion]",
      "dependsOn": [
        "Microsoft.Resources/deployments/update-vnet-dns"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('networkRestartUri')]",
          "contentVersion": "[variables('version').contentVersion]"
        },
        "parameters": {
          "version":{
            "value":"[variables('version')]"
          },
          "vmName":{
            "value": "[concat(parameters('dnsNamePrefix'), '-dir')]"
          }
        }
      }
    },
    {
      "name": "prepare-conf-launch-cluster",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "[variables('version').templateAPIVersion]",
      "dependsOn": [
        "Microsoft.Resources/deployments/network-restart-dns",
        "Microsoft.Resources/deployments/director-node"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('scriptsUri'), '/prepare-conf-launch-cluster.json')]",
          "contentVersion": "[variables('version').contentVersion]"
        },
        "parameters": {
          "version":{
            "value":"[variables('version')]"
          },
          "vmName":{
            "value": "[concat(parameters('dnsNamePrefix'), '-dir')]"
          },
          "scriptsUri": {
            "value": "[variables('scriptsUri')]"
          },
          "clusterParameters":{
            "value": "[variables('clusterParameters')]"
          }
        }
      }
    }
  ]
}